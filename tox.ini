# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.
[tox]
isolated_build = True
skip_missing_interpreters = True
envlist = lint, static-{charm,lib}, unit, scenario

[vars]
src_path = {toxinidir}/src
tst_path = {toxinidir}/tests
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
basepython = python3
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
#passenv =
#  PYTHONPATH
#  HOME
#  PATH
#  CHARM_BUILD_DIR
#  MODEL_SETTINGS
#  HTTP_PROXY
#  HTTPS_PROXY
#  NO_PROXY

[testenv:fmt]
skip_install=True
description = Apply coding style standards to code
deps =
    black
    ruff
commands =
    ruff check --fix {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
skip_install=True
description = Check code against coding style standards
deps =
    black
    ruff
    codespell
commands =
    codespell . --skip .git --skip .tox --skip build --skip lib --skip venv --skip .mypy_cache --skip *.svg
    ruff check {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:static-{charm}]
skip_install=True
description = Run static analysis checks
deps =
    pyright
    cosl
    -r {toxinidir}/requirements.txt
commands =
    charm: pyright {[vars]src_path}

[testenv:unit]
description = Run unit tests
deps =
    -r{toxinidir}/requirements.txt
    pytest
    pytest-subtests
    coverage[toml]
    deepdiff
    fs
    toml
    responses
    cosl
setenv =
  {[testenv]setenv}
  JUJU_VERSION = 3.0.3
commands =
    coverage run \
      --source={[vars]src_path} \
      -m pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tst_path}/unit
    coverage report -m

[testenv:scenario]
description = Run scenario tests on K8s
deps =
    -r{toxinidir}/requirements.txt
    pytest
    cosl
    ops-scenario >= 6.1.5
commands =
    pytest -vv --tb native --log-cli-level=INFO -s {posargs} {[vars]tst_path}/scenario --ignore {[vars]tst_path}/scenario/test_k8s

[testenv:integration]
skip_install=True
description = Run integration tests
deps =
    aiohttp
    asyncstdlib
    # Libjuju needs to track the juju version
    juju ~= 3.1.0
    pytest
    prometheus-api-client
    pytest-operator
    cosl
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tst_path}/integration

[testenv:check]
skip_install=True
depends =
    lint
    static

[coverage:run]
relative_files = True
