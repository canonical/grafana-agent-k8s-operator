# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.
[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, static, unit

[vars]
src_path = {toxinidir}/src/
test_path = {toxinidir}/tests/
all_path = {[vars]src_path} {[vars]test_path}

[testenv]
basepython = python3
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
#passenv =
#  PYTHONPATH
#  HOME
#  PATH
#  CHARM_BUILD_DIR
#  MODEL_SETTINGS
#  HTTP_PROXY
#  HTTPS_PROXY
#  NO_PROXY

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
commands =
    # pflake8 wrapper suppports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:prettify]
deps =
    black
    isort
commands =
    isort {toxinidir}/src/. {toxinidir}/tests/. {toxinidir}/lib/charms/loki_k8s/.
    black --line-length=99 --target-version=py38 {toxinidir}/src {toxinidir}/tests

[testenv:static]
description = Run static analysis checks
deps =
    -r{toxinidir}/requirements-dev.txt
    juju
    mypy
    pytest
    pytest-operator
    types-PyYAML
    types-requests
commands =
    mypy {[vars]all_path} {posargs}

[testenv:unit]
description = Run unit tests
deps =
    -r{toxinidir}/requirements-dev.txt
    pytest
    coverage
    deepdiff
    toml
commands =
    coverage run \
      --source={[vars]src_path} \
      -m pytest -v -s --tb native {posargs} {[vars]test_path}/unit
    coverage report -m --include=src/*.py

[testenv:integration]
deps =
    juju
    pytest
    pytest-operator
    pytest-asyncio
setenv =
    PYTHONPATH={toxinidir}/lib:{toxinidir}/src
commands =
    pytest -v tests/integration

[testenv:check]
depends = 
    lint
    static

[coverage:run]
relative_files = True